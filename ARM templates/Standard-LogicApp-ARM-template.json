{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppFEName": {
      "type": "String",
      "metadata": {
        "desscription": "Name of the standard Logic App to be deployed."
      }
    },
    "fileShareName": {
      "type": "String",
      "metadata": {
        "desscription": "File Share of the standard Logic App."
      }
    },
    "appInsightName": {
      "type": "String",
      "metadata": {
        "desscription": "Application Insights where the standard Logic App will be connected to."
      }
    },
    "use32BitWorkerProcess": {
      "type": "Bool",
      "metadata": {
        "desscription": "Standard Logic Apps worker process bits."
      }
    },
    "location": {
      "defaultValue": "westeurope",
      "type": "String",
      "metadata": {
        "description": "Location to deploy resources to."
      }
    },
    "hostingPlanFEName": {
      "type": "String",
      "metadata": {
        "description": "Standard Logic App’s App Service plan name."
      }
    },
    "contentStorageAccountName": {
      "defaultValue": "storageaccount",
      "type": "String",
      "metadata": {
        "description": "Storage account to be created."
      }
    },
    "sku": {
      "defaultValue": "WorkflowStandard",
      "type": "String",
      "metadata": {
        "description": "App Service Plan’s tier."
      }
    },
    "skuCode": {
      "defaultValue": "WS1",
      "type": "String",
      "metadata": {
        "description": "App Service Plan’s pricing."
      }
    },
    "workerSize": {
      "defaultValue": "3",
      "type": "String",
      "metadata": {
        "description": "App Service Plan’s worker size"
      }
    },
    "workerSizeId": {
      "defaultValue": "3",
      "type": "String",
      "metadata": {
        "description": "App Service Plan’s worker size id"
      }
    },
    "numberOfWorkers": {
      "defaultValue": "1",
      "type": "String",
      "metadata": {
        "description": "App Service Plan’s number of workers"
      }
    },
    "vnetName": {
      "defaultValue": "vnetName",
      "type": "String",
      "metadata": {
        "description": "Name of the VNET that the Function App and Storage account will communicate over."
      }
    },
    "subnetName": {
      "type": "String",
      "metadata": {
        "description": "VNET subnet name."
      }
    },

    "virtualNetworkAddressPrefix": {
      "defaultValue": "10.x.x.x/24",
      "type": "String",
      "metadata": {
        "description": "VNET address space."
      }
    },
    "functionSubnetAddressPrefix": {
      "defaultValue": "10.x.x.x/26",
      "type": "String",
      "metadata": {
        "description": "Function App's subnet address range."
      }
    },
    "privateEndpointSubnetAddressPrefix": {
      "defaultValue": "10.x.x.x/26",
      "type": "String",
      "metadata": {
        "description": "Storage account's private endpoint's subnet address range."
      }
    },
    "privateStorageFileDnsZoneName": {
      "defaultValue": "privatelink.file",
      "type": "String",
      "metadata": {
        "description": "Private DNS Zone for Azure File storage."
      }
    },
    "privateStorageBlobDnsZoneName": {
      "defaultValue": "privatelink.blob",
      "type": "String",
      "metadata": {
        "description": "Private DNS Zone for Azure Blob storage."
      }
    },
    "privateStorageQueueDnsZoneName": {
      "defaultValue": "privatelink.queue",
      "type": "String",
      "metadata": {
        "description": "Private DNS Zone for Azure Queue storage."
      }
    },
    "privateStorageTableDnsZoneName": {
      "defaultValue": "privatelink.table",
      "type": "String",
      "metadata": {
        "description": "Private DNS Zone for Azure Table storage."
      }
    },
    "privateEndpointFileStorageName": {
      "defaultValue": "storageaccount-file-private-endpoint",
      "type": "String",
      "metadata": {
        "description": "Private endpoint for Azure File storage."
      }
    },
    "privateEndpointBlobStorageName": {
      "defaultValue": "storageaccount-blob-private-endpoint",
      "type": "String",
      "metadata": {
        "description": "Private endpoint for Azure Blob storage."
      }
    },
    "privateEndpointQueueStorageName": {
      "defaultValue": "storageaccount-queue-private-endpoint",
      "type": "String",
      "metadata": {
        "description": "Private endpoint for Azure Queue storage."
      }
    },
    "privateEndpointTableStorageName": {
      "defaultValue": "storageaccount-table-private-endpoint",
      "type": "String",
      "metadata": {
        "description": "Private endpoint for Azure Table storage."
      }
    },
    "virtualNetworkLinksSuffixFileStorageName": {
      "defaultValue": "privatelink.file-link",
      "type": "String",
      "metadata": {
        "description": "Virtual Network Link for Azure File storage."
      }
    },
    "virtualNetworkLinksSuffixBlobStorageName": {
      "defaultValue": "privatelink.blob-link",
      "type": "String",
      "metadata": {
        "description": "Virtual Network Link for Azure Blob storage."
      }
    },
    "virtualNetworkLinksSuffixQueueStorageName": {
      "defaultValue": "privatelink.queue-link",
      "type": "String",
      "metadata": {
        "description": "Virtual Network Link for Azure Queue storage."
      }
    },
    "virtualNetworkLinksSuffixTableStorageName": {
      "defaultValue": "privatelink.table-link",
      "type": "String",
      "metadata": {
        "description": "Virtual Network Link for Azure Table storage."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-07-01",
      "name": "[parameters('vnetName')]",
      "location": "[parameters('Location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('virtualNetworkAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('functionSubnetAddressPrefix')]",
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled",
              "delegations": [
                {
                  "name": "webapp",
                  "properties": {
                    "serviceName": "Microsoft.Web/serverFarms",
                    "actions": [
                      "Microsoft.Network/virtualNetworks/subnets/action"
                    ]
                  }
                }
              ]
            }
          },
          {
            "name": "[parameters('contentStorageAccountName')]",
            "properties": {
              "addressPrefix": "[parameters('privateEndpointSubnetAddressPrefix')]",
              "privateLinkServiceNetworkPolicies": "Enabled",
              "privateEndpointNetworkPolicies": "Disabled"
            }
          }
        ],
        "enableDdosProtection": false,
        "enableVmProtection": false
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[parameters('contentStorageAccountName')]",
      "location": "[parameters('Location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Deny"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2021-04-01",
      "name": "[concat(parameters('contentStorageAccountName'), '/default/', toLower(parameters('fileShareName')))]",
      "dependsOn": [
        "[parameters('contentStorageAccountName')]"
      ]
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-06-01",
      "name": "[parameters('privateStorageFileDnsZoneName')]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-06-01",
      "name": "[parameters('privateStorageBlobDnsZoneName')]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-06-01",
      "name": "[parameters('privateStorageQueueDnsZoneName')]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-06-01",
      "name": "[parameters('privateStorageTableDnsZoneName')]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-06-01",
      "name": "[concat(parameters('privateStorageFileDnsZoneName'), '/', parameters('virtualNetworkLinksSuffixFileStorageName'))]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones',parameters('privateStorageFileDnsZoneName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ],
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-06-01",
      "name": "[concat(parameters('privateStorageBlobDnsZoneName'), '/', parameters('virtualNetworkLinksSuffixBlobStorageName'))]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateStorageBlobDnsZoneName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ],
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-06-01",
      "name": "[concat(parameters('privateStorageQueueDnsZoneName'), '/', parameters('virtualNetworkLinksSuffixQueueStorageName'))]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateStorageQueueDnsZoneName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ],
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-06-01",
      "name": "[concat(parameters('privateStorageTableDnsZoneName'), '/', parameters('virtualNetworkLinksSuffixTableStorageName'))]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones',parameters('privateStorageTableDnsZoneName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ],
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2020-06-01",
      "name": "[parameters('privateEndpointFileStorageName')]",
      "location": "[parameters('Location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices/shares', parameters('contentStorageAccountName'), 'default',toLower(parameters('fileShareName')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ],
      "properties": {
        "subnet": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('contentStorageAccountName') )]"
        },
        "privateLinkServiceConnections": [
          {
            "name": "MyStorageQueuePrivateLinkConnection",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('contentStorageAccountName'))]",
              "groupIds": [
                "file"
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2020-06-01",
      "name": "[parameters('privateEndpointBlobStorageName')]",
      "location": "[parameters('Location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices/shares', parameters('contentStorageAccountName'), 'default', toLower(parameters('fileShareName')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ],
      "properties": {
        "subnet": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('contentStorageAccountName') )]"
        },
        "privateLinkServiceConnections": [
          {
            "name": "MyStorageQueuePrivateLinkConnection",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('contentStorageAccountName'))]",
              "groupIds": [
                "blob"
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2020-06-01",
      "name": "[parameters('privateEndpointQueueStorageName')]",
      "location": "[parameters('Location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices/shares', parameters('contentStorageAccountName'), 'default', toLower(parameters('fileShareName')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ],
      "properties": {
        "subnet": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('contentStorageAccountName'))]"
        },
        "privateLinkServiceConnections": [
          {
            "name": "MyStorageQueuePrivateLinkConnection",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('contentStorageAccountName'))]",
              "groupIds": [
                "queue"
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2020-06-01",
      "name": "[parameters('privateEndpointTableStorageName')]",
      "location": "[parameters('Location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices/shares', parameters('contentStorageAccountName'), 'default', toLower(parameters('fileShareName')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ],
      "properties": {
        "subnet": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('contentStorageAccountName'))]"
        },
        "privateLinkServiceConnections": [
          {
            "name": "MyStorageQueuePrivateLinkConnection",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('contentStorageAccountName'))]",
              "groupIds": [
                "table"
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
      "apiVersion": "2020-06-01",
      "name": "[concat(parameters('privateEndpointFileStorageName'), '/default')]",
      "location": "[parameters('Location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateStorageFileDnsZoneName'))]",
        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpointFileStorageName'))]"
      ],
      "properties": {
        "privateDnsZoneConfigs": [
          {
            "name": "config1",
            "properties": {
              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateStorageFileDnsZoneName'))]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
      "apiVersion": "2020-06-01",
      "name": "[concat(parameters('privateEndpointBlobStorageName'), '/default')]",
      "location": "[parameters('Location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateStorageBlobDnsZoneName'))]",
        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpointBlobStorageName'))]"
      ],
      "properties": {
        "privateDnsZoneConfigs": [
          {
            "name": "config1",
            "properties": {
              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateStorageBlobDnsZoneName'))]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
      "apiVersion": "2020-06-01",
      "name": "[concat(parameters('privateEndpointQueueStorageName'), '/default')]",
      "location": "[parameters('Location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateStorageQueueDnsZoneName'))]",
        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpointQueueStorageName'))]"
      ],
      "properties": {
        "privateDnsZoneConfigs": [
          {
            "name": "config1",
            "properties": {
              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateStorageQueueDnsZoneName'))]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
      "apiVersion": "2020-06-01",
      "name": "[concat(parameters('privateEndpointTableStorageName'), '/default')]",
      "location": "[parameters('Location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateStorageTableDnsZoneName'))]",
        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpointTableStorageName'))]"
      ],
      "properties": {
        "privateDnsZoneConfigs": [
          {
            "name": "config1",
            "properties": {
              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateStorageTableDnsZoneName'))]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[parameters('logicAppFEname')]",
      "location": "[parameters('Location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[parameters('logicAppFEname')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanFEName'))]"
      ],
      "tags": {},
      "kind": "functionapp,workflowapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "name": "[parameters('logicAppFEname')]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "node"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightName')), '2015-05-01').InstrumentationKey]"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightName')), '2015-05-01').ConnectionString]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('contentStorageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('contentStorageAccountName')), '2019-06-01').keys[0].value,';EndpointSuffix=','core.windows.net')]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('contentStorageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('contentStorageAccountName')), '2019-06-01').keys[0].value,';EndpointSuffix=','core.windows.net')]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(parameters('fileShareName'))]"
            },
            {
              "name": "APP_KIND",
              "value": "workflowApp"
            },
            {
              "name": "WEBSITE_VNET_ROUTE_ALL",
              "value": "1"
            },

            {
              "name": "AzureFunctionsJobHost__extensionBundle__id",
              "value": "Microsoft.Azure.Functions.ExtensionBundle.Workflows",
              "slotSetting": false
            },
            {
              "name": "AzureFunctionsJobHost__extensionBundle__version",
              "value": "[1.*, 2.0.0)",
              "slotSetting": false
            },
            {
              "name": "WEBSITE_CONTENTOVERVNET",
              "value": "1",
              "slotSetting": false
            }
          ],
          "use32BitWorkerProcess": "[parameters('use32BitWorkerProcess')]",
          "cors": {
            "allowedOrigins": [
              "https://afd.hosting.portal.azure.net",
              "https://afd.hosting-ms.portal.azure.net",
              "https://hosting.portal.azure.net",
              "https://ms.hosting.portal.azure.net",
              "https://ema-ms.hosting.portal.azure.net",
              "https://ema.hosting.portal.azure.net",
              "https://ema.hosting.portal.azure.net"
            ]
          }
        },
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms/', parameters('hostingPlanFEName'))]",
        "clientAffinityEnabled": true
      },
      "resources": [
        {
          "type": "networkconfig",
          "apiVersion": "2018-11-01",
          "name": "virtualNetwork",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[parameters('logicAppFEname')]"
          ],
          "properties": {
            "subnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets',parameters('vnetName'), parameters('subnetName'))]",
            "swiftSupported": true
          }
        }
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-11-01",
      "name": "[parameters('hostingPlanFEName')]",
      "location": "[parameters('location')]",
      "dependsOn": [],
      "tags": {},
      "sku": {
        "Tier": "[parameters('sku')]",
        "Name": "[parameters('skuCode')]"
      },
      "kind": "",
      "properties": {
        "name": "[parameters('hostingPlanFEName')]",
        "workerSize": "[parameters('workerSize')]",
        "workerSizeId": "[parameters('workerSizeId')]",
        "numberOfWorkers": "[parameters('numberOfWorkers')]",
        "maximumElasticWorkerCount": "20"
      }
    }
  ]
}